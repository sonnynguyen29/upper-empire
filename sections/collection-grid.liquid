{{ 'collection-grid.css' | asset_url | stylesheet_tag }}

{% liquid
  assign collections = section.blocks | where: 'type', 'collection'
%}

<section id="collection-grid">
  <div class="collection-grid-container">
    <div class="collection-grid-wrapper">
      <div class="collection-grid-title">
        <a href="pages/{{ section.settings.section_title_url }}">
          <h2>{{ section.settings.section_title }}</h2>
        </a>
      </div>
      <div class="collection-grid-layout">
        <div class="collection-grid-layout-splide">

        </div>
        {% comment %} <div class="splide__track">
          <div class="splide__list">
            {%- comment -%}
               {% for collection in collections %}
                <div class="collection-grid-item splide__slide">
                  <div class="collection-image">
                    {% render 'responsive-image' with collection.settings.collection_image %}
                  </div>
                  <div class="collection-text" style="color: {{ collection.settings.collection_text_color }}">
                    <p>{{ collection.settings.collection_text }}</p>
                  </div>
                </div>
              {% endfor %}
            {%- endcomment -%}
          </div>
        </div> {% endcomment %}
        <div class="view-more-wrapper">
          <a href="pages/{{ section.settings.section_title_url }}" class="view-more">View More</a>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  async function fetchUECollectionImages() {
    try {
      // Fetch the HTML content of the target page
      const response = await fetch('/pages/ue-collection');
      const htmlText = await response.text();

      // Parse the HTML text
      const parser = new DOMParser();
      const doc = parser.parseFromString(htmlText, 'text/html');

      // Find the parent container
      const grid = doc.querySelector('.ue-collection-grid');

      if (grid) {
        // Select the first 6 items
        const items = grid.querySelectorAll('.ue-collection-item');
        const splideList = document.querySelector('.ue-collection-slider .collection-grid-layout-splide');

        if (!splideList) {
          console.error('Target container .splide__list not found.');
          return;
        }

        items.forEach((item, index) => {
          if (index < 4) {
            const { imageText, imageUrl, textColor } = item.dataset;
            const fullImageUrl = `http:${imageUrl}`;
            const productText = imageText.replace('<p>', '').replace('</p>', '');

            // Create the HTML structure
            const itemDiv = document.createElement('div');
            itemDiv.classList.add('collection-grid-item', 'splide__slide');

            const imageDiv = document.createElement('div');
            imageDiv.classList.add('collection-image');

            const responsiveImageDiv = document.createElement('div');
            responsiveImageDiv.classList.add('responsive-image-wrapper');

            const imgElement = document.createElement('img');
            imgElement.src = fullImageUrl;

            const textDiv = document.createElement('div');
            textDiv.classList.add('collection-text');
            textDiv.style.color = textColor;

            const pElement = document.createElement('p');
            pElement.textContent = productText;

            // Append elements
            responsiveImageDiv.appendChild(imgElement);
            imageDiv.appendChild(responsiveImageDiv);
            textDiv.appendChild(pElement);
            itemDiv.appendChild(imageDiv);
            itemDiv.appendChild(textDiv);
            splideList.appendChild(itemDiv);
          }
        });

        console.log('Images added successfully!');
      } else {
        console.error('ue-collection-grid not found');
      }
    } catch (error) {
      console.error('Error fetching UE collection:', error);
    }
  }

  window.addEventListener('load', async (event) => {
    fetchUECollectionImages();
    {% comment %} const loadProductGridSplide = () => {
      var productGridSlide = new Splide('.collection-grid-layout-splide', {
        mediaQuery: 'min',
        arrows: false,
        pagination: false,
        arrowPath:
          'M 39.511719 19.195312 L 24.511719 34.382812 C 24.199219 34.699219 23.773438 34.875 23.332031 34.875 C 22.890625 34.875 22.464844 34.699219 22.152344 34.382812 C 21.839844 34.066406 21.664062 33.636719 21.664062 33.1875 C 21.664062 32.738281 21.839844 32.308594 22.152344 31.992188 L 34.308594 19.6875 L 1.667969 19.6875 C 1.222656 19.6875 0.800781 19.511719 0.488281 19.191406 C 0.175781 18.875 0 18.449219 0 18 C 0 17.550781 0.175781 17.125 0.488281 16.808594 C 0.800781 16.492188 1.222656 16.3125 1.667969 16.3125 L 34.308594 16.3125 L 22.152344 4.007812 C 21.839844 3.691406 21.664062 3.261719 21.664062 2.8125 C 21.664062 2.363281 21.839844 1.933594 22.152344 1.617188 C 22.464844 1.300781 22.890625 1.125 23.332031 1.125 C 23.773438 1.125 24.199219 1.300781 24.511719 1.617188 L 39.511719 16.804688 C 39.667969 16.964844 39.789062 17.148438 39.875 17.355469 C 39.957031 17.558594 40 17.777344 40 18 C 40 18.222656 39.957031 18.441406 39.875 18.644531 C 39.789062 18.851562 39.667969 19.039062 39.511719 19.195312 Z M 39.511719 19.195312',
        grid: {
          rows: 2,
          cols: 2,
          gap: {
            row: 2,
            col: 2,
          },
          padding: { left: 0, right: 50 },
        },
        breakpoints: {
          768: {
            grid: false,
            perPage: 2,
            arrows: true,
            padding: { left: 0, right: 0 },
            gap: 8,
          },
          1024: {
            perPage: 3,
          },
          1440: {
            perPage: 4,
          },
        },
      });
      productGridSlide.mount(window.splide.Extensions);
    }; {% endcomment %}

    // loadProductGridSplide();

    {% comment %} document.querySelectorAll('.product-variants-title').forEach(function (element) {
      element.addEventListener('click', function (event) {
        event.preventDefault();
        window.location.href = element.getAttribute('data-variant-url');
      });
    }); {% endcomment %}
  });
</script>

{% schema %}
{
  "name": "Collection Grid",
  "class": "ue-collection-slider",
  "settings": [
    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Our Collection"
    },
    {
      "type": "page",
      "id": "section_title_url",
      "label": "Select Page"
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "image_picker",
          "id": "collection_image",
          "label": "Collection Image"
        },
        {
          "type": "text",
          "id": "collection_text",
          "label": "Collection Text"
        },
        {
          "type": "color",
          "id": "collection_text_color",
          "label": "Collection Text Color",
          "default": "#000000"
        }
      ]
    }
  ]
}
{% endschema %}
